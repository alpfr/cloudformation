AWSTemplateFormatVersion: '2010-09-09'
Description: Template to create a Network Load Balancer with CloudWatch Logs and S3 Access Logging using an existing IAM role

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "Network Configuration"
      Parameters:
      - VPCId
      - SubnetIds
      - TargetSecurityGroupId
    - Label:
        default: "Load Balancer Configuration"
      Parameters:
      - LoadBalancerPort
      - LoadBalancerProtocol
    - Label:
        default: "Target Group Configuration"
      Parameters:
      - TargetGroupName
      - TargetPort
      - TargetGroupProtocol
      - HealthCheckProtocol
      - HealthCheckPort
    - Label:
        default: "Target Configuration"
      Parameters:
      - PrivateIP1
      - PrivateIP2
    - Label:
        default: "Tagging Configuration"
      Parameters:
      - Environment
      - Project
      - Owner
    - Label:
        default: "Logging Configuration"
      Parameters:
      - S3BucketName
      - LogRetentionInDays
      - S3LoggingIAMRoleArn

Parameters:
  S3BucketName:
    Type: String
    Description: Name of the S3 bucket for access logs.
  S3LoggingIAMRoleArn:
    Type: String
    Description: ARN of the existing IAM role for S3 logging.
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the load balancer and target group will be created
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of public subnet IDs for the load balancer
  TargetSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: ID of an existing security group to use for the targets
  TargetGroupName:
    Type: String
    Default: my-target-group
    Description: Name of the Target Group
  LoadBalancerPort:
    Type: Number
    Default: 22
    Description: Port on which the load balancer listens
  TargetPort:
    Type: Number
    Default: 22
    Description: Port on which targets are listening
  LoadBalancerProtocol:
    Type: String
    Default: TCP
    AllowedValues:
    - TCP
    Description: Protocol for the load balancer listener
  TargetGroupProtocol:
    Type: String
    Default: TCP
    AllowedValues:
    - TCP
    Description: Protocol for the target group
  HealthCheckProtocol:
    Type: String
    Default: TCP
    AllowedValues:
    - TCP
    Description: Protocol for health checks
  HealthCheckPort:
    Type: Number
    Default: 22
    Description: Port for health checks
  PrivateIP1:
    Type: String
    Description: Private IP address of the first target
  PrivateIP2:
    Type: String
    Description: Private IP address of the second target
  Environment:
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - test
    - staging
    - prod
    Description: Environment for the resources
  Project:
    Type: String
    Description: Project name for the resources
  Owner:
    Type: String
    Description: Owner of the resources (e.g., team or individual name)
  LogRetentionInDays:
    Type: Number
    Default: 7
    Description: Number of days to retain CloudWatch Logs
    AllowedValues:
    - 1
    - 3
    - 5
    - 7
    - 14
    - 30
    - 60
    - 90
    - 120
    - 150
    - 180
    - 365
    - 400
    - 545
    - 731
    - 1827
    - 3653
  CloudWatchIAMRoleArn:
    Type: String
    Description: ARN of the IAM Role to allow the Network Load Balancer to push logs to CloudWatch Logs

Resources:
  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AWS::StackName}-nlb
      Subnets: !Ref SubnetIds
      Type: network
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: deletion_protection.enabled
        Value: true
      - Key: load_balancing.cross_zone.enabled
        Value: true
      - Key: access_logs.s3.enabled
        Value: true
      - Key: access_logs.s3.bucket
        Value: !Ref S3BucketName
      - Key: access_logs.s3.prefix
        Value: nlb-logs/
      - Key: access_logs.s3.role_arn
        Value: !Ref S3LoggingIAMRoleArn
      - Key: load_balancer_attributes.logging.cloudwatch_logs.enabled
        Value: true
      - Key: load_balancer_attributes.logging.cloudwatch_logs.log_group_name
        Value: !Sub /aws/elasticloadbalancing/${AWS::StackName}-nlb
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-nlb
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project
      - Key: Owner
        Value: !Ref Owner
      - Key: ManagedBy
        Value: CloudFormation

  LoadBalancerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/elasticloadbalancing/${AWS::StackName}-nlb
      RetentionInDays: !Ref LogRetentionInDays
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-loggroup
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project
      - Key: Owner
        Value: !Ref Owner

Outputs:
  LoadBalancerDNSName:
    Description: DNS name of the Network Load Balancer
    Value: !GetAtt NetworkLoadBalancer.DNSName
  LoadBalancerArn:
    Description: ARN of the Network Load Balancer
    Value: !Ref NetworkLoadBalancer
  TargetGroupArn:
    Description: ARN of the Target Group
    Value: !Ref TargetGroup
  TargetSecurityGroupId:
    Description: ID of the Security Group for targets
    Value: !Ref TargetSecurityGroupId
  S3BucketName:
    Description: Name of the S3 bucket for access logs
    Value: !Ref S3BucketName
